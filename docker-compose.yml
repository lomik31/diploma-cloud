services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - prod_postgres_data:/var/lib/postgresql/data
    networks:
      - default_network

  backend:
    build:
      context: ./backend
      target: prod
    container_name: backend
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: ${DATABASE_PROTO}://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
      DJANGO_DEBUG: false
    volumes:
      - static_files:/static
      - ${STORAGE_LOCATION:-userfiles}:/userfiles
    depends_on:
      - postgres
    networks:
      - default_network

  frontend-builder:
    build:
      context: ./frontend
    container_name: frontend_builder
    volumes:
      - frontend:/app/dist

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_files:/static:ro
      - frontend:/frontend:ro
      - ./nginx/certs:/etc/nginx/certs
    networks:
      - default_network
    environment:
      - DAYS_VALID=30
      - DOMAINS=${DOMAINS:-localhost}
    depends_on:
      - backend
      - frontend-builder

volumes:
  prod_postgres_data:
    external: true
  static_files:
  userfiles:
    external: true
  frontend:

networks:
  default_network:
